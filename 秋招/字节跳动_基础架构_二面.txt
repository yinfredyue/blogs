Raft
- 你认为Raft解决了什么问题？我说了一下CAP原理。Raft提供了CP, 以及比较强的A。
- 描述一下选举过程？什么情况下会选不出leader？这种情况是怎么处理的？
- 假设一个选举过程选出了leader，这个过程至少要多长？
- 如何设置election timeout? 有什么考虑？
- 读取数据的话要通过leader吗？如果不经过会怎么样？这里我引申到了论文末尾提到的提高读的效率的方法。
- 除此之外，还有没有提高读的效率的方法？我说如果愿意牺牲一点consistency，读取的数据允许一定的滞后，应该是有优化的方法的。但是目前没有想过具体的方法。
- 了解etcd的Raft吗？听说过，没有看过。
以上问题基本上读完论文认真写过lab都可以答得上来，算是问的比较简单的了。

操作系统
- 简历上写了实现了中断机制，抢占式调度。分别描述一下。基本照着6.828的实现来就行了，不难。
- OS中与虚拟内存有关的软件、硬件有哪些？起什么作用？分段和分页的区别？段页式？
- 依然从网络的角度问proxy lab。做了相同的解释。

编译原理
- 描述一下编译的过程。说了一下前后端，分析源码，转化成AST，转化成内部表达，转化成汇编。细节其实都忘记了。
- 描述一下构建AST的过程？不太记得了，说记得有一个O(n^3)的很简单的算法，但是真的记不起来了。
- 怎么实现函数调用？我先说了一下函数调用过程中栈的变化。然后说进入后端之后已经建立好了一个表，里面有关于函数的signature的信息，然后只要实现一个通用的函数调用的操作栈的操作，就可以了。
我说只记得大概的原理了，具体的实现就忘记了，github上有代码。

算法题
- 给定二叉树，找到一个节点，使它到所有其他节点的路径之和最短。想了一会儿没有思路，换了第二道题... （当时感觉有点紧张，而且有点困了。总之就是想了一会儿没有思路，尿了...

- 工人做工问题：一个任务列表，每个任务用一个整型的数字表示完成该任务需要花费的单位时间数，每个工人只能连续工作P个单位时间，工人连续工作P个单位时间之后就会离开。工人在做任务的时候只能做一段相邻的任务，并且任务不可以拆分，即要么做完，要么不做，不允许只做一部分。现在给出长度为n的任务列表T，以及k个工人。请你求出最小的一个P值。问题其实不不难，主要是理解题目有点困难。不如一个工人只能用一次，但是可以做连续的几个任务。很容易想到二分法。有惊无险的写完了。

其他
- 有什么问题吗？问了怎么看待大团队和小团队的优劣。




